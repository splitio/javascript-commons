1.9.1 (September 21, 2023)
 - Updated browser listener to avoid registering a handler for 'unload' DOM events, that can prevent browsers from being able to put pages in the back/forward cache for faster back and forward loads (Related to issue https://github.com/splitio/javascript-client/issues/759).

1.9.0 (July 18, 2023)
 - Updated streaming architecture implementation to apply feature flag updates from the notification received which is now enhanced, improving efficiency and reliability of the whole update system.

1.8.3 (June 29, 2023)
 - Updated some transitive dependencies for vulnerability fixes.
 - Updated SDK_READY_TIMED_OUT event to be emitted immediately when a connection error occurs using pluggable storage (i.e., when the wrapper `connect` promise is rejected) in consumer and partial consumer modes.
 - Bugfixing - The `destroy` method has been updated to immediately flag the SDK client as destroyed, to prevent unexpected behaviours when `getTreatment` and `track` methods are called synchronously after `destroy` method is called.

1.8.2 (May 15, 2023)
 - Updated terminology on the SDKs codebase to be more aligned with current standard without causing a breaking change. The core change is the term split for feature flag on things like logs and IntelliSense comments.
 - Updated split storage modules to optimize some operations when using Redis and pluggable storages.
 - Updated some transitive dependencies for vulnerability fixes.

1.8.1 (February 7, 2023)
 - Updated a module import to remove a trailing comma that can cause issues with some bundlers.

1.8.0 (February 3, 2023)
 - Added flush data method to client.

1.7.3 (December 16, 2022)
 - Updated unique keys cache for Redis and Pluggable storages to optimize the usage of the underlying storage.
 - Updated some transitive dependencies for vulnerability fixes.
 - Bugfixing - Updated events and impressions cache in localhost mode in order to avoid memory leaks (Related to issue https://github.com/splitio/javascript-commons/issues/181).

1.7.2 (October 14, 2022)
 - Bugfixing - Handle `Navigator.sendBeacon` API exceptions in the browser, and fallback to regular Fetch/XHR transport in case of error.

1.7.1 (October 5, 2022)
 - Updated default value of `scheduler.featuresRefreshRate` config parameter to 60 seconds.

1.7.0 (October 4, 2022)
 - Added a new impressions mode for the SDK called NONE, to be used in factory when there is no desire to capture impressions on an SDK factory to feed Split's analytics engine. Running NONE mode, the SDK will only capture unique keys evaluated for a particular feature flag instead of full blown impressions.
 - Updated SDK telemetry to support pluggable storage, partial consumer mode, and synchronizer.
 - Updated storage implementations to improve the performance of feature flag evaluations (i.e., `getTreatment(s)` method calls) when using the default storage in memory.
 - Updated evaluation flow to avoid unnecessarily storage calls when the SDK is not ready.

1.6.1 (July 22, 2022)
 - Updated GoogleAnalyticsToSplit integration to validate `autoRequire` config parameter and avoid some wrong warning logs when mapping GA hit fields to Split event properties.

1.6.0 (July 21, 2022)
 - Added `autoRequire` configuration option to the Google Analytics to Split integration, which takes care of requiring the splitTracker plugin on trackers dynamically created by Google tag managers (See https://help.split.io/hc/en-us/articles/360040838752#set-up-with-gtm-and-gtag.js).
 - Updated browser listener to push remaining impressions and events on 'visibilitychange' and 'pagehide' DOM events, instead of 'unload', which is not reliable in modern mobile and desktop Web browsers.
 - Updated the synchronization flow to be more reliable in the event of an edge case generating delay in cache purge propagation, keeping the SDK cache properly synced.
 - Bugfixing - Removed js-yaml dependency to avoid resolution to an incompatible version on certain npm versions when installing third-party dependencies that also define js-yaml as transitive dependency (Related to issue https://github.com/splitio/javascript-client/issues/662).

1.5.0 (June 29, 2022)
 - Added a new config option to control the tasks that listen or poll for updates on feature flags and segments, via the new config sync.enabled . Running online, Split SDK will always pull the most recent updates upon initialization, this only affects updates fetching on a running instance. Useful when a consistent session experience is a must or to save resources when updates are not being used.
 - Updated telemetry logic to track the anonymous config for user consent flag set to declined or unknown.
 - Updated submitters logic, to avoid duplicating the post of impressions to Split cloud when the SDK is destroyed while its periodic post of impressions is running.

1.4.1 (June 13, 2022)
 - Bugfixing - Updated submitters logic, to avoid dropping impressions and events that are being tracked while POST request is pending.

1.4.0 (May 24, 2022)
 - Added `scheduler.telemetryRefreshRate` property to SDK configuration, and deprecated `scheduler.metricsRefreshRate` property.
 - Updated SDK telemetry storage, metrics and updater to be more effective and send less often.
 - Bugfixing - Updated default values for `scheduler.impressionsRefreshRate` config parameter: 300s for OPTIMIZED impression mode and 60s for DEBUG impression mode.

1.3.1 (April 19, 2022)
 - Bugfixing - Added peer dependencies to avoid issues when requiring some third-party dependencies used by modules of the package (Related to issue https://github.com/splitio/javascript-client/issues/662).
 - Bugfixing - Updated `ready` method to rejects the promise with an Error object instead of a string value (Related to issue https://github.com/splitio/javascript-client/issues/654).

1.3.0 (April 6, 2022)
 - Added user consent feature to allow delaying or disabling the data tracking from SDK until user consent is explicitly granted or declined. Read more in our docs.
 - Added `scheduler.impressionsQueueSize` property to SDK configuration to limit the amount of impressions tracked in memory. Read more in our docs.
 - Added support to accept TLS configuration options to the Redis storage in NodeJS. Read more in our docs.
 - Updated format for MySegments keys in LocalStorage, keeping backwards compatibility (issue https://github.com/splitio/javascript-client/issues/638).
 - Updated some modules due to general polishing and refactors, including updates in some log messages.
 - Updated some dependencies for vulnerability fixes.
 - Bugfixing - Updated internal isObject utility function, to avoid unexpected behaviors on frameworks and libraries that uses multiple VM contexts, like NuxtJS dev server.
 - Bugfixing - Fixed validation of `core.key` SDK configuration param, to parse it into a string and log a warning when passing a number (Related to issue https://github.com/splitio/react-native-client/issues/19).
 - Bugfixing - Fixed validation of `sync.impressionsMode` SDK configuration param, to avoid an exception on SplitFactory instantiation when passing a non-string value.
 - Bugfixing - Fixed an issue with `connectionTimeout` options params of Redis storage, that was being ignored and not passed down to the underlying ioredis client.
 - Bugfixing - Fixed streaming synchronization issue with multiple clients.
 - Bugfixing - Fixed issue with internal Map ponyfill that results in logger not working properly on IE11 browser.

1.2.0 (January 19, 2022)
 - Added support to SDK clients on browser to optionally bind attributes to the client, keeping these loaded within the SDK along with the user ID, for easier usage when requesting flag.

1.1.0 (January 11, 2022)
 - Added support for the SDK to run in "consumer" and "partial consumer" modes, with a pluggable implementation of it's internal storage, enabling
  customers to implement this caching with any storage technology of choice and connect it to the SDK instance to be used instead of its default in-memory storage.
 - Updated multiple modules due to general polishing and improvements, including the replacement of default exports with named exports, to avoid runtime errors with some particular configurations of Webpack projects.
 - Updated ioredis dependency for vulnerability fixes.
 - Bugfixing - Fixed issue returning dynamic configs if treatment name contains a dot (".").

1.0.0 (October 20, 2021)
 - BREAKING CHANGE on multiple modules due to general polishing, improvements and bug fixes. In most cases the change is to use named exports. This affected mostly modules related with synchronization and storages.
 - Updated streaming logic to use the newest version of our streaming service, including:
   - Integration with Auth service V2, connecting to the new channels and applying the received connection delay.
   - Implemented handling of the new MySegmentsV2 notification types (SegmentRemoval, KeyList, Bounded and Unbounded)
   - New control notification for environment scoped streaming reset.
 - Updated localhost mode to emit SDK_READY_FROM_CACHE event in browser when using localStorage (Related to issue https://github.com/splitio/react-client/issues/34).
 - Updated dependencies for vulnerability fixes.

0.1.0 (March 30, 2021)
 - Initial public release. It includes common modules to be consumed by the different Split SDK implementations written in JavaScript. Based on the original JS SDK in the `javascript-client` repository.
 - It's designed with a modular approach, with the following goals in mind:
   - Dependents should be able to include the modules that are needed for, as an example, a storage.
   - Dependents should be able to use the module that's specific for their runtime environment, allowing for better usage of native APIs as well as to build optimizations targeted by each platform.
   - Size reduction should be applicable when possible.
   - Design should be extensible, specially for modules that act as an orchestrator.
   - Code reusability.
